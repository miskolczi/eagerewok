import * as d3 from 'd3';

// https://www.jasondavies.com/coffee-wheel/
export class Sunburst {
	width: number
	height: number
	radius: number
	x = null
	y = null
	color = null
	partition = null
	formatNumber = null
	arc = null
	svg = null

	ngOnInit() {
		this.width = 960
		this.height = 700
		this.radius = (Math.min(this.width, this.height) / 2) - 10
		this.formatNumber = d3.format(",d");

		this.x = d3.scaleLinear()
		.range([0, 2 * Math.PI]);

		this.y = d3.scaleSqrt()
		.range([0, this.radius]);

		this.color = d3.scaleOrdinal(d3.schemeCategory10);

		this.partition = d3.partition();

		this.arc = d3.arc()
			.startAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, this.x(d.startAngle))); })
			.endAngle(function(d) { return Math.max(0, Math.min(2 * Math.PI, this.x(d.endAngle))); })
			.innerRadius(function(d) { return Math.max(0, this.y(d.innerRadius)); })
			.outerRadius(function(d) { return Math.max(0, this.y(d.outerRadius)); });


		// this.svg = d3.select("body").append("svg")
		this.svg = d3.select("svg#sunburst")
			.attr("width", this.width)
			.attr("height", this.height)
			.append("g")
			.attr("transform", "translate(" + this.width / 2 + "," + (this.height / 2) + ")");
		console.log(this.svg)
	}

	public draw(){
		d3.json("assets/flare.json"
			, (error, data: {}) => {
			// .then(function(error, root) {
			// .then(function(value: {}) {
				console.log(data)
			// if (error) throw error;

			let root = d3.hierarchy(data);
			root.sum(function(d) { return Object.keys(d).length; });
			this.svg.selectAll("path")
			.data(this.partition(root).descendants())
			.enter().append("path")
			.attr("d", this.arc)
			.style("fill", function(d) { return this.color((d.children ? d : d.parent).data.name); })
			// .on("click", click)
			// .append("title")
			//   .text(function(d) { return d.data.name + "\n" + this.formatNumber(d.value); });
			});

		// d3.select(self.frameElement).style("height", this.height + "px");	
	}


// public click(d) {
//   this.svg.transition()
//       .duration(750)
//       .tween("scale", function() {
//         var xd = d3.interpolate(this.x.domain(), [d.x0, d.x1]),
//             yd = d3.interpolate(this.y.domain(), [d.y0, 1]),
//             yr = d3.interpolate(this.y.range(), [d.y0 ? 20 : 0, this.radius]);
//         return function(t) { this.x.domain(xd(t)); this.y.domain(yd(t)).range(yr(t)); };
//       })
//     .selectAll("path")
//       .attrTween("d", function(d) { return function() { return this.arc(d); }; });
// }


}
